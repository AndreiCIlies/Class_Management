@inject IClassService ClassService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<h3><b>Courses</b></h3>
<p>Choose a course to view the gradebook.</p>

@if (teacherClasses == null)
{
    <p>Loading classes...</p>
}
else if (!teacherClasses.Any())
{
    <p>No classes found.</p>
}
else
{
    <div>
        @foreach (var cls in teacherClasses)
        {
            <button @onclick="() => SelectClass(cls.Id)">
                @cls.Name
            </button>
            <br />
        }
    </div>
}

@code {
    private List<Class> teacherClasses = new();
    private string? teacherId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        teacherId = authState.User.FindFirst(c => c.Type == "sub")?.Value;

        if (!string.IsNullOrEmpty(teacherId))
        {
            var allClasses = await ClassService.GetAllClassesAsync();
            teacherClasses = allClasses.Where(c => c.TeacherId == teacherId).ToList();
        }
    }

    private void SelectClass(int classId)
    {
        Nav.NavigateTo($"/grades/{classId}");
    }
}